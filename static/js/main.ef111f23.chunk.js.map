{"version":3,"sources":["ApiClient.ts","Connect.tsx","Stitch.tsx","index.tsx"],"names":["client","axios","create","withCredentials","baseURL","process","ConnectComponent","React","useState","config","setConfig","fetchConnect","useCallback","a","get","resp","data","console","log","useEffect","Jumbotron","className","Container","href","authorization_uri","initialValues","policy_params","taxcrunch_params","ccc_params","behavior_params","Input","children","Row","Col","inputsTimers","pollInputs","app","model_pk","inputs","setInputs","setTimeout","status","clearTimeout","detail","response","window","location","simTimers","pollSim","sim","setSim","SimComponent","url","title","owner","traceback","JSON","stringify","errors_warnings","Stitch","results","setResults","onSubmit","values","actions","post","setStatus","invalid","setSubmitting","props","htmlFor","id","name","as","placeholder","type","map","value","project","ReactDOM","render","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.ef111f23.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst client = axios.create({\n  withCredentials: true,\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\nexport default client;\n","import React, { useCallback, useEffect } from \"react\";\nimport { Container, Jumbotron } from \"react-bootstrap\";\n\nimport client from \"./ApiClient\";\n\nexport const ConnectComponent: React.FC<{}> = () => {\n  const [config, setConfig] = React.useState<{\n    authorization_uri: string;\n    state: string;\n  }>();\n\n  const fetchConnect = useCallback(async () => {\n    try {\n      const resp = await client.get(\"/connect/\");\n      const data = resp.data;\n      console.log(\"got data\", data);\n      setConfig(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchConnect();\n  }, [fetchConnect]);\n\n  if (!config) {\n    return <div />;\n  }\n  return (\n    <Jumbotron className=\"vertical-center\">\n      <Container>\n        <a href={config.authorization_uri}>\n          Click this link to connect to Compute Studio\n        </a>\n      </Container>\n    </Jumbotron>\n  );\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Formik, FormikProps, Form, Field } from \"formik\";\n\nimport client from \"./ApiClient\";\n\ninterface Me {\n  username: string;\n  status: string;\n}\n\ninterface PSLStitch {\n  policy_params: string;\n  taxcrunch_params: string;\n  ccc_params: string;\n  behavior_params: string;\n}\n\nconst initialValues: PSLStitch = {\n  policy_params: \"\",\n  taxcrunch_params: \"\",\n  ccc_params: \"\",\n  behavior_params: \"\",\n};\n\ninterface AppException {\n  owner: string;\n  title: string;\n  msg: string;\n}\n\ninterface AppResponse {\n  model_pk?: number;\n  status: string;\n  ready: boolean;\n  project: string;\n  url?: string;\n  exception?: AppException;\n}\n\nconst Input: React.FC<{ children: JSX.Element[] }> = ({ children }) => (\n  <Row className=\"w-100 py-3\">\n    <Col className=\"col-auto\">{children}</Col>\n  </Row>\n);\n\ninterface Inputs {\n  model_pk: number;\n  status: string;\n  errors_warnings: any;\n  traceback?: string;\n  sim: Sim;\n}\n\ninterface Sim {\n  status: string;\n  model_pk: number;\n  eta: number;\n  title: string;\n  owner: string;\n}\n\nvar inputsTimers: { [app: string]: NodeJS.Timeout } = {};\n\nconst pollInputs = (\n  app: string,\n  model_pk: number,\n  inputs: Inputs | undefined,\n  setInputs: (inputs: Inputs) => void\n) => {\n  inputsTimers[app] = setTimeout(async () => {\n    if (!model_pk) return;\n    if (\n      inputs?.status &&\n      (inputs?.status === \"SUCCESS\" || inputs?.status === \"INVALID\") &&\n      inputs?.model_pk === model_pk\n    )\n      return clearTimeout(inputsTimers[app]);\n    try {\n      const resp = await client.get(`/inputs/${app}/${model_pk}/`);\n      setInputs(resp.data.detail);\n      inputs = resp.data.detail;\n      if (inputs?.status !== \"SUCCESS\" && inputs?.status !== \"INVALID\") {\n        inputsTimers[app] = pollInputs(app, model_pk, inputs, setInputs);\n      } else {\n        clearTimeout(inputsTimers[app]);\n      }\n    } catch (error) {\n      if (error.response.status === 403) {\n        window.location.href = \"/connect/\";\n      }\n    }\n  }, 3000);\n  return inputsTimers[app];\n};\n\nvar simTimers: { [app: string]: NodeJS.Timeout } = {};\n\nconst pollSim = (\n  app: string,\n  model_pk: number,\n  inputs: Inputs,\n  sim: Sim | undefined,\n  setSim: (sim: Sim) => void\n): NodeJS.Timeout => {\n  simTimers[app] = setTimeout(async () => {\n    if (!model_pk) return;\n    if (\n      sim?.status &&\n      (inputs?.status === \"INVALID\" ||\n        sim?.status === \"SUCCESS\" ||\n        sim?.status === \"FAIL\") &&\n      inputs?.model_pk === model_pk &&\n      sim?.model_pk === model_pk\n    )\n      return clearTimeout(simTimers[app]);\n    try {\n      const resp = await client.get(`/sim/${app}/${model_pk}/`);\n      setSim(resp.data);\n      sim = resp.data;\n      if (sim?.status !== \"SUCCESS\" && sim?.status !== \"FAIL\") {\n        simTimers[app] = pollSim(app, model_pk, inputs, sim, setSim);\n      } else {\n        return clearTimeout(simTimers[app]);\n      }\n    } catch (error) {\n      if (error.response.status === 403) {\n        window.location.href = \"/connect/\";\n      }\n    }\n  }, 5000);\n  return simTimers[app];\n};\n\nconst SimComponent: React.FC<{\n  app: string;\n  model_pk?: number;\n  url?: string;\n}> = ({ app, model_pk, url }) => {\n  const [inputs, setInputs] = useState<Inputs>();\n  const [sim, setSim] = useState<Sim>();\n\n  useEffect(() => {\n    if (!model_pk) return;\n    clearTimeout(inputsTimers[app]);\n    pollInputs(app, model_pk, inputs, setInputs);\n  }, [app, model_pk, inputs]);\n\n  useEffect(() => {\n    if (!model_pk || !inputs) return;\n    if (inputs.status === \"INVALID\") {\n      clearTimeout(simTimers[app]);\n      return;\n    }\n    clearTimeout(simTimers[app]);\n    pollSim(app, model_pk, inputs, sim, setSim);\n  }, [app, model_pk, inputs, sim]);\n\n  return (\n    <Row className=\"py-2\">\n      <Col>\n        <h4>{app}</h4>\n        <h6>{!!sim && `${sim.title} by ${sim.owner}`}</h6>\n        <p>{url && <a href={url}>ID: {model_pk}</a>}</p>\n        <p>Inputs status: {inputs?.status || \"STARTING\"}</p>\n        <p>Sim status: {sim?.status || \"STARTING\"}</p>\n        {(inputs?.status === \"INVALID\" || inputs?.traceback) && (\n          <pre>\n            <code>\n              {inputs?.traceback ||\n                JSON.stringify(inputs.errors_warnings, null, 2)}\n            </code>\n          </pre>\n        )}\n        {sim?.status === \"SUCCESS\" && (\n          <details>\n            <summary>API Response for Simulation</summary>\n            <pre>\n              <code>{JSON.stringify(sim, null, 2)}</code>\n            </pre>\n          </details>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport const Stitch: React.FC<{}> = () => {\n  const [results, setResults] = React.useState<Array<AppResponse>>();\n\n  const fetchConnect = useCallback(async () => {\n    try {\n      const resp = await client.get(\"/me/\");\n      const me: Me = resp.data;\n      if (me.status === \"anon\") {\n        window.location.href = \"/connect/\";\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.response.status === 403) {\n        window.location.href = \"/connect/\";\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchConnect();\n  }, [fetchConnect]);\n\n  return (\n    <Container>\n      <h1>PSL Stitch</h1>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={async (values, actions) => {\n          console.log({ values, actions });\n          try {\n            const resp = await client.post(\"/create/\", values);\n            actions.setStatus({ invalid: null });\n            setResults(resp.data as Array<AppResponse>);\n          } catch (error) {\n            actions.setStatus({\n              invalid: JSON.stringify(error.response.data, null, 2),\n            });\n          }\n\n          actions.setSubmitting(false);\n        }}\n      >\n        {(props: FormikProps<PSLStitch>) => (\n          <>\n            {props.status && props.status.invalid && (\n              <div>\n                <pre>\n                  <code>{props.status.invalid}</code>\n                </pre>\n              </div>\n            )}\n            <Form>\n              <Input>\n                <label className=\"pr-2\" htmlFor=\"policy_params\">\n                  Policy Parameters\n                </label>\n\n                <Field\n                  id=\"policy_params\"\n                  name=\"policy_params\"\n                  as=\"textarea\"\n                  placeholder=\"{}\"\n                />\n              </Input>\n\n              <Input>\n                <label className=\"pr-2\" htmlFor=\"taxcrunch_params\">\n                  Taxcrunch Parameters\n                </label>\n\n                <Field\n                  id=\"taxcrunch_params\"\n                  name=\"taxcrunch_params\"\n                  placeholder=\"{}\"\n                  as=\"textarea\"\n                />\n              </Input>\n\n              <Input>\n                <label className=\"pr-2\" htmlFor=\"ccc_params\">\n                  CCC Parameters\n                </label>\n\n                <Field\n                  id=\"ccc_params\"\n                  as=\"textarea\"\n                  name=\"ccc_params\"\n                  placeholder=\"{}\"\n                />\n              </Input>\n\n              <Input>\n                <label className=\"pr-2\" htmlFor=\"behavior_params\">\n                  Behavior Parameters\n                </label>\n\n                <Field\n                  id=\"behavior_params\"\n                  name=\"behavior_params\"\n                  placeholder=\"{}\"\n                  as=\"textarea\"\n                />\n              </Input>\n\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </Form>\n\n            {!!results && (\n              <div className=\"mt-2\">\n                {results.map((value) => (\n                  <SimComponent\n                    key={value.project}\n                    app={value.project}\n                    model_pk={value.model_pk}\n                    url={value.url}\n                  />\n                ))}\n              </div>\n            )}\n          </>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ConnectComponent } from \"./Connect\";\nimport { Stitch } from \"./Stitch\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nconsole.log(\"api\", process.env.REACT_APP_API_URL);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/connect/\" render={() => <ConnectComponent />} />\n    </Switch>\n    <Switch>\n      <Route exact path=\"/\" render={() => <Stitch />} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}